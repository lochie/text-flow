import styles from "./styles.module.scss";

import { useEffect, useState } from "react";

import TextFlow from "text-flow";

import { Footer } from "../footer";
import { Button } from "../button";

const ReactLogo = () => (
  <svg
    width="21"
    height="20"
    viewBox="0 0 21 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M12.25 9.68066C12.25 8.55837 11.4666 7.64844 10.5 7.64844C9.53358 7.64844 8.75 8.55837 8.75 9.68066C8.75 10.8031 9.53358 11.713 10.5 11.713C11.4666 11.713 12.25 10.8031 12.25 9.68066Z"
      fill="#53C1DE"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M16.5903 6.32554C16.9863 4.78244 17.484 1.92092 15.7293 0.950774C13.9827 -0.0151399 11.7099 1.83573 10.5097 2.94671C9.31308 1.8468 6.97641 0.00384313 5.22314 0.977068C3.47726 1.94623 4.01565 4.7603 4.42043 6.31307C2.79182 6.75664 0 7.71202 0 9.66398C0 11.6104 2.78891 12.6498 4.40789 13.093C4.00161 14.6543 3.49017 17.4282 5.23829 18.3952C6.99811 19.3683 9.3275 17.5692 10.5388 16.446C11.7466 17.5635 13.9976 19.3744 15.7445 18.4047C17.4969 17.4319 17.0405 14.6088 16.6357 13.047C18.2051 12.6029 21 11.5861 21 9.66398C21 7.73078 18.1932 6.76764 16.5903 6.32554ZM16.3913 12.2193C16.1256 11.4125 15.7668 10.5546 15.328 9.66827C15.7469 8.80289 16.0917 7.95599 16.35 7.15437C17.5251 7.48107 20.1029 8.22772 20.1029 9.66398C20.1029 11.1137 17.6292 11.8674 16.3913 12.2193ZM15.295 17.6602C13.9916 18.3837 12.0555 16.6519 11.1635 15.829C11.7552 15.2083 12.3466 14.4868 12.9237 13.6856C13.939 13.5993 14.8981 13.458 15.7679 13.2652C16.0528 14.3699 16.6041 16.9335 15.295 17.6602ZM5.68653 17.6499C4.383 16.9291 4.97881 14.4538 5.2777 13.3037C6.13784 13.4862 7.09002 13.6175 8.10768 13.6966C8.68861 14.4806 9.29712 15.2012 9.91032 15.8323C9.15271 16.5351 6.99615 18.374 5.68653 17.6499ZM0.897043 9.66398C0.897043 8.20882 3.45945 7.46757 4.66133 7.1417C4.92416 7.96132 5.26886 8.81833 5.68486 9.68496C5.26348 10.5645 4.91384 11.435 4.64859 12.2643C3.50258 11.9498 0.897043 11.12 0.897043 9.66398ZM5.67259 1.72158C6.98145 0.995082 9.01229 2.76439 9.88113 3.56076C9.27108 4.18896 8.66817 4.90416 8.09221 5.68363C7.10458 5.77141 6.15912 5.91237 5.28996 6.10123C4.96387 4.84885 4.36514 2.44729 5.67259 1.72158ZM13.5655 6.61866C14.2355 6.69973 14.8775 6.80759 15.4803 6.93954C15.2993 7.49574 15.0738 8.07735 14.8081 8.67357C14.4231 7.97295 14.0097 7.28639 13.5655 6.61866ZM10.51 4.17551C10.9238 4.60534 11.3382 5.08534 11.7459 5.60609C10.919 5.56857 10.0907 5.56843 9.2638 5.60554C9.67183 5.08961 10.0898 4.61033 10.51 4.17551ZM6.19955 8.67294C5.9383 8.07881 5.71479 7.49464 5.53225 6.93047C6.13143 6.80191 6.7704 6.69682 7.4361 6.61707C6.99062 7.28334 6.57797 7.96963 6.19955 8.67294ZM7.45521 12.7723C6.76753 12.6987 6.11888 12.5989 5.51989 12.4739C5.70531 11.8998 5.93375 11.3031 6.20057 10.6961C6.5842 11.4068 7.00315 12.0997 7.45521 12.7723ZM10.5349 15.2132C10.1097 14.7733 9.68555 14.2866 9.27136 13.7633C10.103 13.7946 10.9362 13.7946 11.7677 13.759C11.3588 14.292 10.9458 14.7793 10.5349 15.2132ZM14.8167 10.6653C15.0974 11.2788 15.334 11.8723 15.5219 12.4367C14.913 12.5699 14.2556 12.6772 13.563 12.7569C14.0105 12.0765 14.4304 11.3793 14.8167 10.6653ZM12.4231 12.8612C11.1511 12.9483 9.87112 12.9474 8.59866 12.8683C7.87563 11.8555 7.23198 10.7904 6.67639 9.68468C7.22932 8.58121 7.86828 7.51817 8.58788 6.50699C9.86125 6.41471 11.1425 6.41443 12.4158 6.50754C13.1293 7.51866 13.7673 8.57893 14.333 9.67243C13.774 10.7753 13.1316 11.8405 12.4231 12.8612ZM15.2812 1.696C16.5904 2.42012 16.0077 4.99185 15.7216 6.11016C14.8504 5.91735 13.9043 5.7739 12.9138 5.68474C12.3367 4.89685 11.7389 4.18041 11.1387 3.56031C12.0186 2.7468 13.9847 0.978972 15.2812 1.696Z"
      fill="#53C1DE"
    />
  </svg>
);

// a bunch of words that
const texts = [
  "Animate Text Easily",
  "Animate Text Effortlessly",
  "Animate Text Seamlessly",
  "Fluidly Animate Text",
];
const pkgCmds = ["npm i text-flow", "pnpm i text-flow", "yarn add text-flow"];

export default function Home() {
  const [textIndex, setTextIndex] = useState(0);
  const [cmdIndex, setCmdIndex] = useState(0);

  useEffect(() => {
    const interval = setTimeout(() => {
      setTextIndex((textIndex) => textIndex + 1);
    }, 1000);
    return () => clearTimeout(interval);
  }, []);

  return (
    <div className={styles.page}>
      <div className={styles.header}>
        <h1>
          <span>
            <strong>Text Flow</strong> for
          </span>{" "}
          <ReactLogo /> <strong>React</strong>
        </h1>
        <p>An animated text component.</p>
      </div>

      <div className={styles.demo}>
        <TextFlow>{texts[textIndex % texts.length]}</TextFlow>

        <Button onClick={() => setTextIndex((i) => i + 1)}>
          <svg
            width="15"
            height="12"
            viewBox="0 0 15 12"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10.8516 0.613281C10.8516 0.453125 10.8945 0.330078 10.9805 0.244141C11.0703 0.154297 11.1953 0.109375 11.3555 0.109375C11.4297 0.109375 11.498 0.121094 11.5605 0.144531C11.623 0.167969 11.6797 0.201172 11.7305 0.244141L14.0918 2.22461C14.2129 2.32617 14.2734 2.44922 14.2734 2.59375C14.2734 2.73438 14.2129 2.85352 14.0918 2.95117L11.7305 4.93164C11.6797 4.97461 11.623 5.00977 11.5605 5.03711C11.498 5.06055 11.4297 5.07227 11.3555 5.07227C11.1953 5.07227 11.0703 5.02734 10.9805 4.9375C10.8945 4.84766 10.8516 4.72461 10.8516 4.56836V0.613281ZM-0.00585938 8.97461C-0.00585938 8.78711 0.0585938 8.63086 0.1875 8.50586C0.320312 8.38086 0.486328 8.31836 0.685547 8.31836H2.00391C2.34375 8.31836 2.63672 8.25391 2.88281 8.125C3.12891 7.99609 3.37695 7.7793 3.62695 7.47461L7.16016 3.21484C7.55078 2.74609 7.93945 2.42383 8.32617 2.24805C8.71289 2.06836 9.17969 1.97852 9.72656 1.97852H11.7129C11.8965 1.97852 12.0527 2.04492 12.1816 2.17773C12.3105 2.30664 12.375 2.46094 12.375 2.64062C12.375 2.82031 12.3105 2.97461 12.1816 3.10352C12.0527 3.23242 11.8965 3.29688 11.7129 3.29688H9.69141C9.45312 3.29688 9.24414 3.32422 9.06445 3.37891C8.88477 3.42969 8.71484 3.51758 8.55469 3.64258C8.39844 3.76367 8.23633 3.92578 8.06836 4.12891L4.42383 8.50586C4.08398 8.91211 3.74023 9.20117 3.39258 9.37305C3.04492 9.54492 2.61328 9.63086 2.09766 9.63086H0.685547C0.486328 9.63086 0.320312 9.56836 0.1875 9.44336C0.0585938 9.31836 -0.00585938 9.16211 -0.00585938 8.97461ZM10.8516 11.0195V7.06445C10.8516 6.9082 10.8945 6.78516 10.9805 6.69531C11.0703 6.60547 11.1953 6.56055 11.3555 6.56055C11.4297 6.56055 11.498 6.57422 11.5605 6.60156C11.623 6.625 11.6797 6.6582 11.7305 6.70117L14.0918 8.67578C14.2129 8.77734 14.2734 8.89844 14.2734 9.03906C14.2734 9.17969 14.2129 9.30078 14.0918 9.40234L11.7305 11.3887C11.6797 11.4277 11.623 11.459 11.5605 11.4824C11.498 11.5059 11.4297 11.5176 11.3555 11.5176C11.1953 11.5176 11.0703 11.4727 10.9805 11.3828C10.8945 11.2969 10.8516 11.1758 10.8516 11.0195ZM-0.00585938 2.66992C-0.00585938 2.48242 0.0585938 2.32617 0.1875 2.20117C0.320312 2.07617 0.486328 2.01367 0.685547 2.01367H2.09766C2.61328 2.01367 3.04492 2.09961 3.39258 2.27148C3.74023 2.44336 4.08398 2.73242 4.42383 3.13867L8.06836 7.51562C8.23633 7.71875 8.39844 7.88281 8.55469 8.00781C8.71484 8.12891 8.88477 8.2168 9.06445 8.27148C9.24414 8.32227 9.45312 8.34766 9.69141 8.34766H11.7129C11.8965 8.34766 12.0527 8.41211 12.1816 8.54102C12.3105 8.66992 12.375 8.82422 12.375 9.00391C12.375 9.18359 12.3105 9.33984 12.1816 9.47266C12.0527 9.60156 11.8965 9.66602 11.7129 9.66602H9.72656C9.17969 9.66602 8.71289 9.57812 8.32617 9.40234C7.93945 9.22266 7.55078 8.89648 7.16016 8.42383L3.62695 4.16992C3.37695 3.86523 3.12891 3.64844 2.88281 3.51953C2.63672 3.39062 2.34375 3.32617 2.00391 3.32617H0.685547C0.486328 3.32617 0.320312 3.26367 0.1875 3.13867C0.0585938 3.01367 -0.00585938 2.85742 -0.00585938 2.66992Z"
              fill="currentColor"
            />
          </svg>
          Shuffle Words
        </Button>
      </div>

      <div className={styles.install}>
        <p>
          <code>
            <TextFlow>{pkgCmds[cmdIndex % pkgCmds.length]}</TextFlow>
          </code>
        </p>
      </div>
      <Footer />
    </div>
  );
}
